# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022 KookyBot organization, zly2006, Cubik65536, and
# contributors
# This file is distributed under the same license as the KookyBot package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: KookyBot \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-22 14:21-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../core/event/index.md:1
msgid "事件机制"
msgstr ""

#: ../core/event/index.md:3
msgid "事件是聊天机器人的灵魂。在这一节中，我们将介绍 KookyBot 的事件系统的基本使用和实现细节。"
msgstr ""

#: ../core/event/index.md:5
msgid "事件监听器的基本类型"
msgstr ""

#: ../core/event/index.md:7
msgid "KookyBot 支持这些事件监听器:"
msgstr ""

#: ../core/event/index.md
msgid "名称"
msgstr ""

#: ../core/event/index.md
msgid "详情"
msgstr ""

#: ../core/event/index.md
msgid "使用方法"
msgstr ""

#: ../core/event/index.md
msgid "单方法监听器"
msgstr ""

#: ../core/event/index.md
msgid "使用一个方法监听某类事件，最方便快捷"
msgstr ""

#: ../core/event/index.md
msgid "通过 EventManager.addListener"
msgstr ""

#: ../core/event/index.md
msgid "类监听器"
msgstr ""

#: ../core/event/index.md
msgid "多个方法一起监听，自由度更高"
msgstr ""

#: ../core/event/index.md
msgid "继承 Listener"
msgstr ""

#: ../core/event/index.md
msgid "点击监听器"
msgstr ""

#: ../core/event/index.md
msgid ""
"仅在 CardMessage.ModuleScope.ButtonElement 中使用，您只需要设置 onclock "
"参数即可自动设置，是创建按钮的不二选择"
msgstr ""

#: ../core/event/index.md
msgid "设置 onclick 参数即可"
msgstr ""

#: ../core/event/index.md
msgid "指令监听器"
msgstr ""

#: ../core/event/index.md
msgid "由 Brigadier 提供的构建+提示+执行命令系统"
msgstr ""

#: ../core/event/index.md
msgid "client.addCommand<br/>参见 [命令机制: Brigadier 以及如何使用它](../command/index)"
msgstr ""

#: ../core/event/index.md:16
msgid "我应该如何选择使用的监听器？"
msgstr ""

#: ../core/event/index.md:18
msgid ""
"快速开发使用**单方法监听器**，一个复杂功能使用**类监听器**，命令直接使用 **Brigadier** ，创建 CardMessage "
"时可以选择快捷的 **onclick** 或自由度更高的 **自行监听点击事件**。"
msgstr ""

#: ../core/event/index.md:20
msgid "他们是如何工作的？"
msgstr ""

#: ../core/event/index.md:22
msgid "**注意：**"
msgstr ""

#: ../core/event/index.md:24
msgid ""
"**监听器只会根据最终对象的类型分配事件，所以，如果监听了包括但不限于 `Event`、`MessageEvent` "
"等类型，此监听器无法正常工作。**"
msgstr ""

#: ../core/event/index.md:26
msgid ""
"websocket 或 webhook 收到消息后，先进行解密、解压获取到 json，然后交给 "
"EventManager，并解析为类型不同的事件对象，最后根据对象的类型分配给每一个正确注册的监听器。"
msgstr ""

